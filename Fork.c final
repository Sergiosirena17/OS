#include <string.h>
#include <time.h>
#include <fcntl.h>
#include <unistd.h>
#include <signal.h>
#include <sys/stat.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>

int CONT=0;
int signalON;
int main(void)
{
        int     pipe1[2],pipe2[2], nbytes;
        pid_t   childpid;
        char    string[] = "Hello, world!\n";
        char    readbuffer[80];
        int c = 99;
        sprintf(readbuffer, "%d\0 ",c);  //%e o %d, buscar para enteros 

        pipe(pipe1);
        pipe(pipe2);

        void sigchld_handler(int sig);
        

        if((childpid = fork()) == -1)
        {
                perror("fork");
                exit(1);
        }
 
        
        
        if(childpid == 0) // HIJO
        {
                for(;;)
                {
                    printf("Child program:\n"); 
                    sleep(1);
                    close(pipe1[1]);
                    nbytes = read(pipe1[0], readbuffer, sizeof(readbuffer));               
                    printf("Received string: %s\n", readbuffer);

                    int numero = atoi(readbuffer);
                    printf("Sumando 3 al valor -> %d\n",numero);
                    numero = numero +3;
                    // calculo +3

                    printf("\n\t\tVUELTA NUMERO -> %d\n",CONT);    
                     CONT = CONT + 1;
                        if (CONT >= 10) 
                        { 
                            printf("PROGRAMA FINALIZADO\n");
                            exit(0);
                        }
                    


                    sprintf(readbuffer, "%d\0 ",numero);  //%e o %d, buscar para enteros

                   


                    close(pipe2[0]);
                    write(pipe2[1], readbuffer, (strlen(readbuffer)));
                    }
                exit(0);
        }
        else  // PADRE (REPETIR LO MISMO QUE EN EL HIJO)
        {
            

                    for(;;){
                        sleep(1);
                        printf("Parent program: \n");
                        close(pipe1[0]);
                        write(pipe1[1], readbuffer, (strlen(readbuffer)+1));


                        close(pipe2[1]);                       
                        nbytes = read(pipe2[0], readbuffer, sizeof(readbuffer));               
                        printf("Received string: %s\n", readbuffer);
                        int numero = atoi(readbuffer);
                        printf("Sumando 7 al valor -> %d\n\n",numero);
                        numero = numero +7;
                        // CALCULO +7
                        sprintf(readbuffer, "%d\0 ",numero);  //%e o %d, buscar para enteros
                    }
                
            
                
        }
    

        return(0);
}

void sigchld_handler(int sig){
    signalON = 1;
}
